<?php

namespace AppBundle\Repository;

/**
 * PublicacionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PublicacionRepository extends \Doctrine\ORM\EntityRepository
{
    public function buscarTodasLasPublicaciones()
    {
        return $this->createQueryBuilder('p')
            ->addOrderBy('p.createdAt', 'DESC')
            ->leftJoin('p.categorias', 'categorias')
            ->addSelect('categorias')
            ->leftJoin('p.autor', 'autor')
            ->addSelect('autor')
            ->leftJoin('p.comentarios', 'comentarios')
            ->addSelect('comentarios')
            ->getQuery()
            ;
    }

    public function todaslasPublicaciones()
    {
        return $this->buscarTodasLasPublicaciones()->execute();
    }

    public function buscarPublicacionesQueTieneCategoriaId($nombre)
    {//buscarPublicacionesQueTienenCategoriaId
        $query = $this->createQueryBuilder('p')
            ->leftJoin('p.categorias', 'categorias')
            ->addOrderBy('p.createdAt', 'DESC')
            ->andWhere('categorias.id = :id')
            ->setParameter('id', $nombre)
            ->getQuery()
        ;

        return $query;
    }

    public function PublicacionesQueTieneCategoriaId($nombre)
    {
        return $this->buscarPublicacionesQueTieneCategoriaId($nombre)->execute();
    }


    public function buscarPublicacionesPorcategoriaId2($id)
    {
        $em = $this->getEntityManager();
        $query =  $em->createQueryBuilder()
            ->select('p', 'categoria')
            ->from('AppBundle:Publicacion', 'p')
            ->leftJoin('p.categorias', 'categoria')
            ->andWhere('categoria.id = :id')
            ->setParameter('id', $id)
            ->addOrderBy('p.createdAt', 'DESC')
            ->getQuery()
        ;
        //var_dump($query->getDQL());die;
        return $query;
    }
    

    public function buscarPublicacionesDeUnUsuarioId($id)
    {
        $qb = $this->createQueryBuilder('p')
            ->leftJoin('p.autor', 'autor')
            ->andWhere('autor.id = :id')
            ->setParameter('id', $id)
            ->addOrderBy('p.createdAt', 'DESC')
            ->addSelect('autor')
            ->getQuery()
            ;
        return $qb;
    }

    public function publicacionesDeUnrUsuarioId($id)
    {
        return $this->buscarPublicacionesDeUnUsuarioId($id)->execute();
    }


}
